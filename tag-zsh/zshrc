# keep only the first occurence of each duplicated value
typeset -U path

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
bindkey -e

export EDITOR=nvim

source $HOME/.dotsecrets/secret_tokens

# setxkbmap -option 'caps:ctrl_modifier'
xcape -e 'Caps_Lock=Escape' -t 100

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename "~/.zshrc"

autoload -Uz compinit
compinit
# End of lines added by compinstall

# enable bash completion compatibility mode
autoload bashcompinit
bashcompinit

export ZPLUG_HOME=$HOME/.zplug
source $ZPLUG_HOME/init.zsh

zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"

# bind P and N for EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

zplug "zsh-users/zsh-autosuggestions"

# use ctrl+t to toggle autosuggestions(hopefully this wont be needed as
# zsh-autosuggestions is designed to be unobtrusive)
bindkey '^T' autosuggest-toggle

# zplug "k4rthik/git-cal", as:command, defer:3
# zplug "mafredri/zsh-async", from:github, defer:2

# set the priority when loading
# e.g., zsh-syntax-highlighting must be loaded
# after executing compinit command and sourcing other plugins
# (If the defer tag is given 2 or above, run after compinit command)
zplug "zsh-users/zsh-syntax-highlighting", defer:2

# GEOMETRY_PROMPT_PLUGINS=(virtualenv exec_time git +rustup)
# PROMPT_GEOMETRY_COLORIZE_SYMBOL=false
zplug "geometry-zsh/geometry"

# zplug "cusxio/delta-prompt", use:delta.zsh

# zplug "halfo/lambda-mod-zsh-theme", as:theme
# zplug "NelsonBrandao/absolute", as:theme
# zplug "marszall87/lambda-pure"
# zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

# zplug 'simnalamburt/shellder', as:theme
# zplug "dracula/zsh", as:theme

# fix garish, unreadable green and yellow node segment colours
# POWERLEVEL9K_NODE_VERSION_BACKGROUND="red"
# POWERLEVEL9K_NODE_VERSION_FOREGROUND="white"
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status $TOOL_VERSION)
# POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
# POWERLEVEL9K_SHORTEN_DELIMITER=""
# POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"
# zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme

export ZSH_PLUGINS_ALIAS_TIPS_TEXT="ALIAS IS: "
zplug "djui/alias-tips", defer:3

export EMOJI_CLI_KEYBIND="^v"
zplug "b4b4r07/emoji-cli", defer:3

# zplug "tysonwolker/iterm-tab-colors"
# zplug "Seinh/git-prune", defer:3
# zplug "uvaes/fzf-marks", defer:3
# zplug "AlexisBRENON/oh-my-zsh-reminder", defer:3
# zplug "unixorn/tumult.plugin.zsh", defer:3
# zplug "dbz/zsh-kubernetes", defer:3

# zplug "denolfe/zsh-travis", defer:3
zplug "rupa/z", use:z.sh, defer:1

# slow as fuck
# zplug "iam4x/zsh-iterm-touchbar"

# zplug "Russell91/sshrc", from:github, as:command, use:"sshrc", defer:3
# zplug "bobsoppe/zsh-ssh-agent", use:ssh-agent.zsh, from:github
# zplug "gko/ssh-connect", use:ssh-connect.sh

# completions

# zplug "lukechilds/zsh-better-npm-completion", defer:2

zplug "zplug/zplug", hook-build: "zplug --self-manage"

# install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "install fucking plugins? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

# source plugins and add commands to $PATH
zplug load

export RUST_SRC_PATH="$HOME/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src"

export GOPATH="$HOME/go"
export DYLD_LIBRARY_PATH=/usr/local/opt/capstone/lib/:$DYLD_LIBRARY_PATH

path=(
  /usr/local/sbin
  $HOME/bin
  $HOME/.rbenv/bin
  $HOME/.local/bin
  $path
)

# load custom functions & aliases
source $HOME/.helpers/index

export ERL_AFLAGS="-kernel shell_history enabled"
